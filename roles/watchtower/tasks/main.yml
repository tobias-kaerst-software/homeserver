- name: Start Watchtower
  when: watchtower_enabled is true
  block:
    - name: Start watchtower container
      community.docker.docker_container:
        name: "{{ watchtower_container_name }}"
        image: "{{ watchtower_image_name }}:{{ watchtower_image_version }}"
        volumes:
          - "{{ docker_socket }}:/var/run/docker.sock:ro"
        env:
          TZ: "{{ timezone }}"
          WATCHTOWER_SCHEDULE: "{{ watchtower_schedule }}"
          WATCHTOWER_HTTP_API_TOKEN: "{{ watchtower_token }}"
          WATCHTOWER_HTTP_API_METRICS: "true"
          WATCHTOWER_CLEANUP: "true"
          WATCHTOWER_REMOVE_VOLUMES: "true"
        labels:
          traefik.http.routers.watchtower.entrypoints: websecure
          traefik.http.routers.watchtower.rule: Host(`{{ watchtower_container_name }}.{{ hostname }}`) && PathPrefix(`/v1/metrics`)
          homepage.group: "Metrics"
          homepage.name: "Watchtower"
          homepage.icon: "watchtower.svg"
          homepage.description: "Keep containers up to date."
          homepage.widget.type: "watchtower"
          homepage.widget.url: "https://{{ watchtower_container_name }}.{{ hostname }}"
          homepage.widget.key: "{{ watchtower_token }}"
        networks: "{{ docker_common_settings.networks }}"
        log_driver: "{{ docker_common_settings.log_driver }}"
        log_options: "{{ docker_common_settings.log_options }}"
        restart_policy: "{{ docker_common_settings.restart_policy }}"
        user: "{{ docker_common_settings.user }}"
        groups:
          - "{{ docker_group_id }}"

- name: Stop Watchtower
  when: watchtower_enabled is false
  block:
    - name: Stop Watchtower container
      community.docker.docker_container:
        name: "{{ watchtower_container_name }}"
        state: absent
