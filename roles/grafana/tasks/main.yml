- name: Start grafana
  when: grafana_enabled is true
  block:
    - name: Check for loki installation
      ansible.builtin.fail:
        msg: "Grafana requires loki enabled and running, please set that up first."
      when: loki_enabled is false

    - name: Ensure grafana config directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0700"
      loop:
        - "{{ config_path }}/grafana/data"
        - "{{ config_path }}/grafana/settings/datasources"

    - name: Template grafana configuration
      ansible.builtin.template:
        src: "datasource.yml.j2"
        dest: "{{ config_path }}/grafana/settings/datasources/datasource.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0700"

    - name: Copy grafana configuration
      ansible.builtin.copy:
        src: "files/dashboards"
        dest: "{{ config_path }}/grafana/settings/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0700"

    - name: Start grafana container
      community.docker.docker_container:
        name: "{{ grafana_container_name }}"
        image: "{{ grafana_image_name }}:{{ grafana_image_version }}"
        volumes:
          - "{{ config_path }}/grafana/data:/var/lib/grafana"
          - "{{ config_path }}/grafana/settings:/etc/grafana/provisioning"
        env:
          # [server]
          GF_SERVER_ROOT_URL: "https://{{ grafana_container_name }}.{{ hostname }}"
          # [security]
          GF_SECURITY_ADMIN_USER: "{{ grafana_username }}"
          GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_password }}"
          # [auth.gernic_oauth]
          GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
          GF_AUTH_GENERIC_OAUTH_NAME: "Authelia"
          GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{ grafana_client_id }}"
          GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{ grafana_client_secret }}"
          GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email groups"
          GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES: "false"
          GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://{{ authelia_container_name }}.{{ hostname }}/api/oidc/authorization"
          GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://{{ authelia_container_name }}.{{ hostname }}/api/oidc/token"
          GF_AUTH_GENERIC_OAUTH_API_URL: "https://{{ authelia_container_name }}.{{ hostname }}/api/oidc/userinfo"
          GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: "preferred_username"
          GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: "groups"
          GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: "name"
          GF_AUTH_GENERIC_OAUTH_USE_PKCE: "true"
          GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'admin') && 'Admin' || 'Viewer'"
        labels:
          traefik.enable: "true"
          traefik.http.routers.grafana.entrypoints: websecure
          traefik.http.routers.grafana.rule: Host(`{{ grafana_container_name }}.{{ hostname }}`)
          homepage.group: "Metrics"
          homepage.name: "Grafana"
          homepage.icon: "grafana.svg"
          homepage.href: "https://{{ grafana_container_name }}.{{ hostname }}"
          homepage.description: "Visualize your metrics."
          homepage.widget.type: "grafana"
          homepage.widget.url: "http://{{ grafana_container_name }}:3000"
          homepage.widget.username: "{{ grafana_username }}"
          homepage.widget.password: "{{ grafana_password }}"
        networks: "{{ docker_common_settings.networks }}"
        log_driver: "{{ docker_common_settings.log_driver }}"
        log_options: "{{ docker_common_settings.log_options }}"
        restart_policy: "{{ docker_common_settings.restart_policy }}"
        user: "{{ docker_common_settings.user }}"

- name: Stop grafana
  when: grafana_enabled is false
  block:
    - name: Stop grafana container
      community.docker.docker_container:
        name: "{{ grafana_container_name }}"
        state: absent
