- name: Start traefik
  when: traefik_enabled is true
  block:
    - name: Ensure traefik config directory
      ansible.builtin.file:
        path: "{{ config_path }}/traefik"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0700"

    - name: Template traefik configuration
      ansible.builtin.template:
        src: "traefik.yml.j2"
        dest: "{{ config_path }}/traefik/traefik.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0700"

    - name: Start traefik container
      community.docker.docker_container:
        name: "{{ traefik_container_name }}"
        image: "{{ traefik_image_name }}:{{ traefik_image_version }}"
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - "{{ config_path }}/traefik:/etc/traefik"
          - "{{ docker_socket }}:/var/run/docker.sock:ro"
        env:
          NAMECHEAP_API_USER: "{{ acme_user }}"
          NAMECHEAP_API_KEY: "{{ acme_api_key }}"
        labels:
          traefik.enable: "true"
          traefik.http.routers.traefik.entrypoints: websecure
          traefik.http.routers.traefik.rule: Host(`{{ traefik_container_name }}.{{ hostname }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
          traefik.http.routers.traefik.service: api@internal
          traefik.http.routers.traefik.middlewares: authelia@file
          homepage.group: "System"
          homepage.name: "Traefik"
          homepage.icon: "traefik.svg"
          homepage.href: "https://{{ traefik_container_name }}.{{ hostname }}/dashboard/"
          homepage.description: "Reverse proxy and load balancer."
          homepage.widget.type: "traefik"
          homepage.widget.url: "http://{{ traefik_container_name }}:8080"
        networks: "{{ docker_common_settings.networks }}"
        etc_hosts:
          host.docker.internal: 172.17.0.1
        log_driver: "{{ docker_common_settings.log_driver }}"
        log_options: "{{ docker_common_settings.log_options }}"
        restart_policy: "{{ docker_common_settings.restart_policy }}"
        user: "{{ docker_common_settings.user }}"
        groups:
          - "{{ docker_group_id }}"

- name: Stop traefik
  when: traefik_enabled is false
  block:
    - name: Stop traefik container
      community.docker.docker_container:
        name: "{{ traefik_container_name }}"
        state: absent
